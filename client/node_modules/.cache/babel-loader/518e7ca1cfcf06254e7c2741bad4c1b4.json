{"ast":null,"code":"import axios from 'axios'; //Types\n\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LODED, AUTH_ERROR } from \"./types\"; //Other Action\n\nimport { _setAlert } from './alert';\n/**\n * Load USer\n */\n\n/**\n * Register USer action creator \n */\n\nexport const _register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const userData = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', userData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(err => {\n        dispatch(_setAlert(err.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_SOCIAL_DEV_WORKER/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LODED","AUTH_ERROR","_setAlert","_register","name","email","password","dispatch","config","headers","userData","JSON","stringify","res","post","type","payload","data","error","errors","response","forEach","err","msg"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACIC,gBADJ,EACsBC,aADtB,EAEIC,UAFJ,EAEgBC,UAFhB,QAEkC,SAFlC,C,CAGA;;AACA,SAASC,SAAT,QAA0B,SAA1B;AAIA;;;;AAQA;;;;AAIA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B,MAAMC,QAAN,IAAkB;AAErE,QAAMC,MAAM,GAAE;AACVC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADC,GAAd;AAMA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAjB;;AAED,MAAI;AACA,UAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EAAmCF,MAAnC,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEjB,gBADD;AAELkB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAMH,GATD,CASE,OAAOC,KAAP,EAAc;AAEf,UAAMC,MAAM,GAAED,KAAK,CAACE,QAAN,CAAeH,IAAf,CAAoBE,MAAlC;;AACA,QAAGA,MAAH,EAAU;AACNA,MAAAA,MAAM,CAACE,OAAP,CAAeC,GAAG,IAAI;AAClBf,QAAAA,QAAQ,CAACL,SAAS,CAACoB,GAAG,CAACC,GAAL,EAAU,QAAV,CAAV,CAAR;AACH,OAFD;AAGH;;AACEhB,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEhB;AADD,KAAD,CAAR;AAGH;AAGH,CAjCM","sourcesContent":["\nimport axios from 'axios';\n//Types\nimport { \n    REGISTER_SUCCESS, REGISTER_FAIL, \n    USER_LODED, AUTH_ERROR } from \"./types\";\n//Other Action\nimport { _setAlert } from './alert';\n\n\n\n/**\n * Load USer\n */\n\n\n\n\n\n/**\n * Register USer action creator \n */\n\nexport const _register = ({ name, email, password}) => async dispatch => {\n\n    const config ={\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const userData = JSON.stringify({ name, email, password });\n\n   try {\n       const res = await axios.post('/api/users', userData, config); \n\n       dispatch({\n           type: REGISTER_SUCCESS,\n           payload: res.data\n       });\n\n\n   } catch (error) {\n\n    const errors =error.response.data.errors;\n    if(errors){\n        errors.forEach(err => {\n            dispatch(_setAlert(err.msg, 'danger'))\n        });\n    }\n       dispatch({\n           type: REGISTER_FAIL,\n       })\n   }\n\n\n}"]},"metadata":{},"sourceType":"module"}