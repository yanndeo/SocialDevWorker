{"ast":null,"code":"import axios from 'axios'; //Types\n\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LODED, AUTH_ERROR } from \"./types\"; //Other Action\n\nimport { _setAlert } from './alert'; //Utils\n\nimport setAuthToken from \"../utils/setAuthToken\";\n/**\n * Load USer\n */\n\nexport const _loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = a;\n  } catch (error) {}\n};\n/**\n * Register USer action creator \n */\n\nexport const _register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const userData = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', userData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(err => {\n        dispatch(_setAlert(err.msg, 'danger'));\n      });\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_SOCIAL_DEV_WORKER/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LODED","AUTH_ERROR","_setAlert","setAuthToken","_loadUser","dispatch","localStorage","token","res","a","error","_register","name","email","password","config","headers","userData","JSON","stringify","post","type","payload","data","errors","response","forEach","err","msg"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SACIC,gBADJ,EACsBC,aADtB,EAEIC,UAFJ,EAEgBC,UAFhB,QAEkC,SAFlC,C,CAGA;;AACA,SAASC,SAAT,QAA0B,SAA1B,C,CACA;;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAKA;;;;AAGA,OAAO,MAAMC,SAAS,GAAC,MAAK,MAAMC,QAAN,IAAiB;AAEzC,MAAGC,YAAY,CAACC,KAAhB,EAAsB;AAClBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACH;;AAED,MAAI;AACA,UAAMC,GAAG,GAAGC,CAAZ;AACH,GAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AAIJ,CAdM;AAmBP;;;;AAIA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B,MAAMT,QAAN,IAAkB;AAErE,QAAMU,MAAM,GAAE;AACVC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADC,GAAd;AAMA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAjB;;AAED,MAAI;AACA,UAAMN,GAAG,GAAG,MAAMX,KAAK,CAACuB,IAAN,CAAW,YAAX,EAAyBH,QAAzB,EAAmCF,MAAnC,CAAlB;AAEAV,IAAAA,QAAQ,CAAC;AACLgB,MAAAA,IAAI,EAAEvB,gBADD;AAELwB,MAAAA,OAAO,EAAEd,GAAG,CAACe;AAFR,KAAD,CAAR;AAMH,GATD,CASE,OAAOb,KAAP,EAAc;AAEf,UAAMc,MAAM,GAAEd,KAAK,CAACe,QAAN,CAAeF,IAAf,CAAoBC,MAAlC;;AACA,QAAGA,MAAH,EAAU;AACNA,MAAAA,MAAM,CAACE,OAAP,CAAeC,GAAG,IAAI;AAClBtB,QAAAA,QAAQ,CAACH,SAAS,CAACyB,GAAG,CAACC,GAAL,EAAU,QAAV,CAAV,CAAR;AACH,OAFD;AAGH;;AACEvB,IAAAA,QAAQ,CAAC;AACLgB,MAAAA,IAAI,EAAEtB;AADD,KAAD,CAAR;AAGH;AAGH,CAjCM","sourcesContent":["\nimport axios from 'axios';\n//Types\nimport { \n    REGISTER_SUCCESS, REGISTER_FAIL, \n    USER_LODED, AUTH_ERROR } from \"./types\";\n//Other Action\nimport { _setAlert } from './alert';\n//Utils\nimport setAuthToken from \"../utils/setAuthToken\";\n\n\n\n\n/**\n * Load USer\n */\nexport const _loadUser=()=> async dispatch =>{\n\n    if(localStorage.token){\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        const res = a\n    } catch (error) {\n        \n    }\n\n\n\n}\n\n\n\n\n/**\n * Register USer action creator \n */\n\nexport const _register = ({ name, email, password}) => async dispatch => {\n\n    const config ={\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const userData = JSON.stringify({ name, email, password });\n\n   try {\n       const res = await axios.post('/api/users', userData, config); \n\n       dispatch({\n           type: REGISTER_SUCCESS,\n           payload: res.data\n       });\n\n\n   } catch (error) {\n\n    const errors =error.response.data.errors;\n    if(errors){\n        errors.forEach(err => {\n            dispatch(_setAlert(err.msg, 'danger'))\n        });\n    }\n       dispatch({\n           type: REGISTER_FAIL,\n       })\n   }\n\n\n}"]},"metadata":{},"sourceType":"module"}