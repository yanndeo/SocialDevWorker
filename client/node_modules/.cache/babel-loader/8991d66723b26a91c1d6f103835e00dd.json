{"ast":null,"code":"var _jsxFileName = \"/Users/Maranatha/Desktop/PROJECT_JS/MERN_SOCIAL_DEV_WORKER/client/src/components/layout/Alert.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; //2- Destructuring des du state placé en props.\n\nconst Alert = ({\n  alerts\n}) => {\n  return;\n\n  if (alerts !== null && alerts.length > 0) {\n    return alerts.map(alert => React.createElement(\"div\", {\n      key: alert.id,\n      className: \"alert alert-\".concat(alert.alertType),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, alert.msg));\n  }\n};\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired //1- mapons le state dans les props\n\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps, null)(Alert);","map":{"version":3,"sources":["/Users/Maranatha/Desktop/PROJECT_JS/MERN_SOCIAL_DEV_WORKER/client/src/components/layout/Alert.js"],"names":["React","PropTypes","connect","Alert","alerts","length","map","alert","id","alertType","msg","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAGA;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAE5B;;AACK,MAAGA,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,MAAP,GAAgB,CAAtC,EAAwC;AAExC,WAAOD,MAAM,CAACE,GAAP,CAAWC,KAAK,IACf;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAoB,MAAA,SAAS,wBAAiBD,KAAK,CAACE,SAAvB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEF,KAAK,CAACG,GADR,CADD,CAAP;AAKC;AAGP,CAbD;;AAeAP,KAAK,CAACQ,SAAN,GAAkB;AAClBP,EAAAA,MAAM,EAAEH,SAAS,CAACW,KAAV,CAAgBC,UADN,CAIlB;;AAJkB,CAAlB;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,MAAM,EAAEW,KAAK,CAACR;AADkB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACY,eAAD,EAAkB,IAAlB,CAAP,CAA+BX,KAA/B,CAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\n\n\n//2- Destructuring des du state placé en props.\nconst Alert = ({ alerts }) => {\n\n  return \n       if(alerts !== null && alerts.length > 0){\n\n       return alerts.map(alert =>(\n               <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n                {alert.msg}\n            </div>\n        ));\n       }\n   \n  \n}\n\nAlert.propTypes = {\nalerts: PropTypes.array.isRequired\n}\n\n//1- mapons le state dans les props\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps, null)(Alert);\n"]},"metadata":{},"sourceType":"module"}